/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package com.simplicity;
import java.io.IOException;
import java.util.*;
public class Main {

    public static void main(String[] args) {
        // Game init
        Scanner input = new Scanner(System.in);
        TimeThread timeThread = TimeThread.getInstance(); 
        Thread mainThread = new Thread(timeThread); 
        mainThread.start();

        // Start Game
        boolean end = false;
        System.out.println(" __________");
        System.out.println("||  _______|   Sponsored by BNMO     +             +");
        System.out.println("|| |  O v O|   Tugas Besar OOP              +");
        System.out.println("|| |_______|   Made with <3 by Kelompok 7__________");
        System.out.println("|| +  o    |......                  \\ |  ________  | /");
        System.out.println("||         |      |                  \\| | ^ __ ^ | |/");
        System.out.println("-".repeat(21) + " WELCOME TO " + "-".repeat(21) );
        System.out.println("  ___ ___ __  __     ___ _    ___ ___ ___ _______   __");
        System.out.println(" / __|_ _|  \\/  |___| _ \\ |  |_ _/ __|_ _|_   _\\ \\ / /"); 
        System.out.println(" \\__ \\| || |\\/| |___|  _/ |__ | | (__ | |  | |  \\ V / "); 
        System.out.println(" |___/___|_|  |_|   |_| |____|___\\___|___| |_|   |_|  "); 
        System.out.println("-".repeat(53));

        while(!end) {
            Menu.getInstance().displayMainMenu("start");
            System.out.print("Masukkan Command : ");
            String cmd = input.nextLine().toLowerCase();
            switch (cmd) {
                case "start game":
                    // New User
                    World.getInstance().addSim(input,"init");
                    end = true;
                    break;
                case "help":
                    Menu.getInstance().help("start");
                    break;
                case "exit":
                    end = true;
                    Menu.getInstance().exit();
                    break;
                default:
                    System.out.println("Input tidak valid, silahkan masukkan ulang input");
                    break;
            }
        }

        World.getInstance().displayWorld();

        // Game interface
        end = false;
        while(!end) {
            if(World.getInstance().isInOwnHouse()) {
                Menu.getInstance().displayMainMenu("ownhouse");
            } else {
                Menu.getInstance().displayMainMenu("ingame");
            }
            System.out.print("Masukkan Command : ");
            String cmd = input.nextLine().toLowerCase();
            boolean noobject = World.getInstance().getCurrentRumah().getCurrRuangan().getDaftarObjekSize() < 1; ;
            switch (cmd) {
                case "action":
                    Menu.getInstance().action();
                    break;
                case "list object":
                    if(noobject) {
                        System.out.println("Tidak ada objek diruangan ini!!!");
                    } else {
                        Menu.getInstance().listObj();
                    }
                    break;
                case "go to object":
                    if(noobject) {
                        System.out.println("Tidak ada objek diruangan ini!!!");
                    } else {
                        Menu.getInstance().goToObj();
                    }
                    break;
                case "move room":
                    Menu.getInstance().moveRoom();
                    break;
                case "edit room":
                    if(World.getInstance().isInOwnHouse()) {
                        Menu.getInstance().editRoom();
                    } else {
                        System.out.println("Input tidak valid, silahkan masukkan ulang input");
                    }
                    break;
                case "view inventory":
                    Menu.getInstance().viewInventory();
                    break;
                case "view current location":
                    Menu.getInstance().viewCurrentLoc();
                    break;
                case "view sim info":
                    Menu.getInstance().viewSimInfo();
                    break;
                case "change sim":
                    World.getInstance().changeSim(input);
                    break;
                case "add sim":
                    World.getInstance().addSim(input,"");
                    World.getInstance().displayWorld();
                    break;
                case "help":
                    Menu.getInstance().help("ingame");
                    break;
                case "exit":
                    end = true;
                    Menu.getInstance().exit();
                    break;
                case "cheat":
                    Menu.getInstance().cheat(input); 
                    break; 
                default:
                    System.out.println("Input tidak valid, silahkan masukkan ulang input");
                    break;
            }
        }
    }
}
